---
import { techStack } from "../../assets/data";
import { getI18N } from "../../i18n";

const { currentLocale } = Astro;

const lang: string = currentLocale!;
const i18n = getI18N(lang);
---

<section class="max-w-xl mx-auto mb-16">
  <h2 class="font-semibold mb-4">Tech Stack</h2>
  <button
    class="show text-sm px-2 py-1 flex items-center gap-2 border border-neutral-200 rounded-md shadow-sm transition-colors hover:bg-neutral-50 dark:border-neutral-900 dark:hover:bg-neutral-950"
  >
    <span>{i18n?.text.ABOUT_OPEN_TECH_STACK}</span>
    <svg viewBox="0 -960 960 960" class="w-6"
      ><path
        fill="currentColor"
        d="M200-200v-240h80v160h160v80H200Zm480-320v-160H520v-80h240v240h-80Z"
      ></path></svg
    >
  </button>

  <dialog
    class="text-sm text-neutral-950 w-full px-6 py-4 bg-neutral-50/70 backdrop:bg-white/70 border border-neutral-200/50 rounded-md backdrop-blur-sm shadow-xl dark:text-neutral-50 dark:backdrop:bg-black/70 dark:bg-neutral-950/70 dark:border-neutral-900/50 md:w-1/2"
  >
    <h3 class="font-semibold text-base mb-4">Tech Stack</h3>
    <ul class="rounded-md border border-neutral-200 dark:border-neutral-900">
      {
        techStack.map((tech) => (
          <li class="px-2 py-1 border-b border-neutral-200 last:border-b-0 dark:border-neutral-900">
            {tech.name}
          </li>
        ))
      }
    </ul>
    <button class="cancel absolute top-4 right-6"
      ><svg
        viewBox="0 -960 960 960"
        class="w-6 transition-opacity hover:opacity-50"
        ><path
          fill="currentColor"
          d="m256-200-56-56 224-224-224-224 56-56 224 224 224-224 56 56-224 224 224 224-56 56-224-224-224 224Z"
        ></path></svg
      ></button
    >
  </dialog>
</section>

<script>
  document.addEventListener("astro:page-load", () => {
    const dialog = document.querySelector("dialog");
    const show = document.querySelector(".show");
    const cancel = document.querySelector(".cancel");

    if (dialog instanceof HTMLDialogElement) {
      if (
        show instanceof HTMLButtonElement &&
        cancel instanceof HTMLButtonElement
      ) {
        show.addEventListener("click", () => dialog.showModal());
        cancel.addEventListener("click", () => {
          dialog.setAttribute("close", "");
          setTimeout(() => {
            dialog.close();
            dialog.removeAttribute("close");
          }, 400);
        });
      }
    }
  });
</script>

<style>
  dialog[open] {
    animation: fadein 0.3s ease-in forwards;
  }

  dialog[close] {
    animation: fadeout 0.3s ease-in forwards;
  }

  @keyframes fadeout {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  @keyframes fadein {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }
</style>
